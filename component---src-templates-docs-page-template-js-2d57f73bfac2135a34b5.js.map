{"version":3,"sources":["webpack:///./src/templates/DocsPageTemplate.js","webpack:///./src/components/docs/Note.js","webpack:///./src/components/header.js"],"names":["renderAst","rehypeReact","createElement","React","components","docs-note","_ref","children","_ref$variant","variant","react_default","a","className","Compiler","TOC","toc","releases","map","_ref2","id","headings","frontmatter","Fragment","key","gatsby_browser_entry","exact","activeClassName","to","path","title","length","heading","value","text","toString","toLowerCase","replace","trim","href","release","name","tag","Template","_ref3","data","page","htmlAst","layout","pageTitle","Helmet_default","rel","header","DocsPageTemplate_TOC","edges","e","node","r","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_nav__WEBPACK_IMPORTED_MODULE_2__","_logo__WEBPACK_IMPORTED_MODULE_3__","Header"],"mappings":"ySAQA,IAAMA,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAY,CAAEC,YCRD,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAHC,EAAAF,EAAaG,eAAb,IAAAD,EAAuB,OAAvBA,EAAA,OAAoCE,EAAAC,EAAAT,cAAA,OAAKU,UAAS,MAAQH,EAAR,YAA4BF,ODS1FM,SAeGC,EAAM,SAAAR,GAAA,IAAGS,EAAHT,EAAGS,IAAKC,EAARV,EAAQU,SAAR,OACVN,EAAAC,EAAAT,cAAA,OAAKU,UAAU,oCACbF,EAAAC,EAAAT,cAAA,OAAKU,UAAU,eAAf,eAECG,EAAIE,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIC,EAAPF,EAAOE,SAAUC,EAAjBH,EAAiBG,YAAjB,OACPX,EAAAC,EAAAT,cAACQ,EAAAC,EAAMW,SAAP,CAAgBC,IAAKJ,GACnBT,EAAAC,EAAAT,cAACsB,EAAA,KAAD,CACEC,OAAK,EACLC,gBAAgB,SAChBd,UAAU,OACVe,GAAIN,EAAYO,MAEfP,EAAYQ,SAEZT,EAASU,QACVpB,EAAAC,EAAAT,cAAA,OAAKU,UAAU,YACbF,EAAAC,EAAAT,cAAA,OAAKU,UAAU,QACZQ,EAASH,IAAI,SAAAc,GAAO,OACnBrB,EAAAC,EAAAT,cAACsB,EAAA,KAAD,CACED,IAAKQ,EAAQC,MACbpB,UAAU,OACVe,GAAON,EAAYO,KAAjB,KA/BJK,EA+BqCF,EAAQC,MA9BpDC,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBC,SA0BcN,EAAQC,OAjCX,IAAAC,SA0CZvB,EAAAC,EAAAT,cAAA,KAAGU,UAAU,OAAO0B,KAAK,aAAzB,YAIA5B,EAAAC,EAAAT,cAAA,OAAKU,UAAU,eAAf,iBAEAF,EAAAC,EAAAT,cAAA,KAAGU,UAAU,OAAO0B,KAAK,kBAAzB,iBAICtB,EAASC,IAAI,SAAAsB,GAAO,OACnB7B,EAAAC,EAAAT,cAAA,KACEqB,IAAKgB,EAAQC,KACb5B,UAAU,OACV0B,KAAI,aAAeC,EAAQE,IAAID,MAE9BD,EAAQC,UAMF,SAASE,EAATC,GAA4B,IAARC,EAAQD,EAARC,KACzBC,EAAwBD,EAAxBC,KAAM9B,EAAkB6B,EAAlB7B,IAAKC,EAAa4B,EAAb5B,SACXK,EAAyBwB,EAAzBxB,YAAayB,EAAYD,EAAZC,QACrB,OACEpC,EAAAC,EAAAT,cAAC6C,EAAA,EAAD,CAAQC,UAAW3B,EAAYQ,OAC7BnB,EAAAC,EAAAT,cAAC+C,EAAAtC,EAAD,KACED,EAAAC,EAAAT,cAAA,QACEgD,IAAI,aACJZ,KAAK,4EAGT5B,EAAAC,EAAAT,cAACiD,EAAA,EAAD,MAEAzC,EAAAC,EAAAT,cAAA,OAAKU,UAAU,wBACbF,EAAAC,EAAAT,cAAA,OAAKU,UAAU,oBACbF,EAAAC,EAAAT,cAACkD,EAAD,CACErC,IAAKA,EAAIsC,MAAMpC,IAAI,SAAAqC,GAAC,OAAIA,EAAEC,OAC1BvC,SAAUA,EAASqC,MAAMpC,IAAI,SAAAuC,GAAC,OAAIA,EAAED,UAIxC7C,EAAAC,EAAAT,cAAA,OAAKU,UAAU,sBACbF,EAAAC,EAAAT,cAAA,OAAKU,UAAU,6BACbF,EAAAC,EAAAT,cAAA,UAAKmB,EAAYQ,OACjBnB,EAAAC,EAAAT,cAAA,OAAKU,UAAU,gBAAgBZ,EAAU8C,QAQ9C,IAAMW,EAAS,8CEhHtB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAiBeM,IAXA,kBACbL,EAAAjD,EAAAT,cAAA,OAAKU,UAAU,gBACbgD,EAAAjD,EAAAT,cAAA,OAAKU,UAAU,4BACbgD,EAAAjD,EAAAT,cAAC4D,EAAA,KAAD,CAAMlD,UAAU,OAAOe,GAAG,KACxBiC,EAAAjD,EAAAT,cAAC8D,EAAA,EAAD,CAAMvD,QAAQ,QAAQG,UAAU,+BAElCgD,EAAAjD,EAAAT,cAAC6D,EAAA,EAAD","file":"component---src-templates-docs-page-template-js-2d57f73bfac2135a34b5.js","sourcesContent":["import React from 'react'\nimport rehypeReact from 'rehype-react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\nimport Header from '../components/header'\nimport Note from '../components/docs/Note'\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: { 'docs-note': Note },\n}).Compiler\n\n/*\n * https://gist.github.com/mathewbyrne/1280286\n */\nconst slugify = text => {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(/[^\\w-]+/g, '') // Remove all non-word chars\n    .replace(/--+/g, '-') // Replace multiple - with single -\n    .trim() // Trim\n}\n\nconst TOC = ({ toc, releases }) => (\n  <div className=\"ui fluid vertical docs text menu\">\n    <div className=\"header item\">User Guides</div>\n\n    {toc.map(({ id, headings, frontmatter }) => (\n      <React.Fragment key={id}>\n        <Link\n          exact\n          activeClassName=\"active\"\n          className=\"item\"\n          to={frontmatter.path}\n        >\n          {frontmatter.title}\n        </Link>\n        {!!headings.length && (\n          <div className=\"sub item\">\n            <div className=\"menu\">\n              {headings.map(heading => (\n                <Link\n                  key={heading.value}\n                  className=\"item\"\n                  to={`${frontmatter.path}#${slugify(heading.value)}`}\n                >\n                  {heading.value}\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    ))}\n    \n    <a className=\"item\" href=\"/examples\">\n      Examples\n    </a>\n\n    <div className=\"header item\">API Reference</div>\n\n    <a className=\"item\" href=\"/docs/api/edge\">\n      Edge (latest)\n    </a>\n\n    {releases.map(release => (\n      <a\n        key={release.name}\n        className=\"item\"\n        href={`/docs/api/${release.tag.name}`}\n      >\n        {release.name}\n      </a>\n    ))}\n  </div>\n)\n\nexport default function Template({ data }) {\n  const { page, toc, releases } = data\n  const { frontmatter, htmlAst } = page\n  return (\n    <Layout pageTitle={frontmatter.title}>\n      <Helmet>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700\"\n        />\n      </Helmet>\n      <Header />\n\n      <div className=\"ui page relaxed grid\">\n        <div className=\"four wide column\">\n          <TOC\n            toc={toc.edges.map(e => e.node)}\n            releases={releases.edges.map(r => r.node)}\n          />\n        </div>\n\n        <div className=\"twelve wide column\">\n          <div className=\"ui left aligned container\">\n            <h1>{frontmatter.title}</h1>\n            <div className=\"docs-content\">{renderAst(htmlAst)}</div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query DocsByPath($path: String!) {\n    releases: allGithubReleases {\n      edges {\n        node {\n          publishedAt\n          name\n          tag {\n            name\n          }\n        }\n      }\n    }\n\n    toc: allMarkdownRemark(sort: { fields: [fileAbsolutePath], order: ASC }) {\n      edges {\n        node {\n          id\n          headings {\n            value\n            depth\n          }\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n\n    page: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      frontmatter {\n        path\n        title\n      }\n    }\n  }\n`\n","import React from 'react'\n\nexport default ({ children, variant = \"info\" }) => <div className={`ui ${variant} message`}>{children}</div>\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Nav from './nav'\nimport Logo from './logo'\n\nconst Header = () => (\n  <div className=\"ui container\">\n    <div className=\"ui basic text large menu\">\n      <Link className=\"item\" to=\"/\">\n        <Logo variant=\"small\" className=\"ui vertical aligned image\" />\n      </Link>\n      <Nav />\n    </div>\n  </div>\n)\n\nexport default Header\n"],"sourceRoot":""}