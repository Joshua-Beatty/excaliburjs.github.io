{"componentChunkName":"component---src-templates-docs-page-template-js","path":"/docs/assets","result":{"data":{"releases":{"edges":[{"node":{"publishedAt":"2020-09-07T23:57:16Z","name":"Excalibur v0.24.5 Release","tag":{"name":"v0.24.5"}}},{"node":{"publishedAt":"2020-09-03T00:18:01Z","name":"Excalibur v0.24.4 Release","tag":{"name":"v0.24.4"}}},{"node":{"publishedAt":"2020-05-10T15:40:01Z","name":"Excalibur v0.24.3 Release","tag":{"name":"v0.24.3"}}},{"node":{"publishedAt":"2020-04-24T02:54:48Z","name":"Excalibur v0.24.1 Release","tag":{"name":"v0.24.1"}}},{"node":{"publishedAt":"2020-04-24T01:11:00Z","name":"Excalibur v0.24.0 Release","tag":{"name":"v0.24.0"}}}]},"toc":{"edges":[{"node":{"id":"dad98d07-474c-5672-9dc6-0347e90c6793","headings":[],"frontmatter":{"title":"Welcome","path":"/docs"}}},{"node":{"id":"2e771808-9321-55e9-af67-192e7aa572e7","headings":[{"value":"Getting Excalibur","depth":3},{"value":"npm Package","depth":4},{"value":"Nuget Package","depth":4},{"value":"Yeoman Generator","depth":4},{"value":"Raw Script Files via CDN or Download","depth":4},{"value":"Unstable Builds","depth":4},{"value":"Example Project Templates","depth":4},{"value":"Referencing Excalibur Standalone","depth":4},{"value":"Referencing Excalibur via Triple-Slash Reference","depth":4},{"value":"Module Loaders and Bundlers","depth":4}],"frontmatter":{"title":"Installation Guide","path":"/docs/installation"}}},{"node":{"id":"7000635a-aee7-58a5-888d-0046f878975f","headings":[{"value":"Download and Install Excalibur","depth":2},{"value":"Global Namespace vs. Imports","depth":2},{"value":"Build Your Game Script","depth":2},{"value":"Hello Excalibur: Building Breakout!","depth":2}],"frontmatter":{"title":"Getting Started","path":"/docs/getting-started"}}},{"node":{"id":"46a42622-4291-5eb6-a3cf-a1d7d9c1c782","headings":[],"frontmatter":{"title":"Features","path":"/docs/features"}}},{"node":{"id":"bdc30b41-96f2-52d3-82ce-ee0e81069fa1","headings":[{"value":"Creating a game","depth":2},{"value":"The main loop","depth":2},{"value":"Update loop","depth":3},{"value":"Draw loop","depth":3},{"value":"Working with Scenes","depth":2},{"value":"Adding a scene","depth":3},{"value":"Accessing the current scene","depth":3},{"value":"Constructor arguments","depth":2},{"value":"Extending the engine","depth":2},{"value":"Event handling","depth":2},{"value":"Example: Actor events","depth":3},{"value":"Example: Pub/Sub with Excalibur","depth":3},{"value":"Managing game state","depth":2},{"value":"Enabling debug mode","depth":2}],"frontmatter":{"title":"Introduction","path":"/docs/intro"}}},{"node":{"id":"69c7865d-1fec-559f-8c14-8adc3d875164","headings":[{"value":"Viewport and Resolution","depth":2},{"value":"Coordinate systems","depth":2},{"value":"Screen coordinates","depth":3},{"value":"World coordinates","depth":3},{"value":"Converting between coordinates","depth":3},{"value":"Game resolution","depth":2},{"value":"Native Resolution","depth":3},{"value":"Scaled Resolution","depth":3},{"value":"HiDPI Displays","depth":3},{"value":"Managing display modes","depth":2},{"value":"Fullscreen Display Mode","depth":3},{"value":"Container Display Mode","depth":3},{"value":"Position Display Mode","depth":3},{"value":"Fullscreen API","depth":2}],"frontmatter":{"title":"Screen & Viewport","path":"/docs/screens"}}},{"node":{"id":"0f491658-65e2-550d-8a93-e02ccc77deaa","headings":[{"value":"Adding actors to the scene","depth":2},{"value":"Scene lifecycle","depth":2},{"value":"Adding a scene","depth":3},{"value":"Initialization","depth":3},{"value":"Activation","depth":3},{"value":"Deactivation","depth":3},{"value":"Cameras","depth":2},{"value":"Focus","depth":3},{"value":"Camera strategies","depth":3},{"value":"Custom strategies","depth":4},{"value":"Camera shake","depth":3},{"value":"Camera lerp","depth":3},{"value":"Camera zooming","depth":3},{"value":"Known Issues","depth":2}],"frontmatter":{"title":"Scenes","path":"/docs/scenes"}}},{"node":{"id":"aa907baa-e308-5d03-8800-6482ebfd600c","headings":[{"value":"Basic actors","depth":2},{"value":"Custom actors","depth":2},{"value":"Actor lifecycle","depth":2},{"value":"Updating actors","depth":2},{"value":"Initialization","depth":3},{"value":"Pre-update","depth":3},{"value":"Core update","depth":3},{"value":"Post-update","depth":3},{"value":"Drawing actors","depth":2},{"value":"Working with textures & sprites","depth":3},{"value":"Working with animations","depth":3},{"value":"Drawing hooks","depth":2},{"value":"Pre-draw","depth":3},{"value":"Core draw","depth":3},{"value":"Post-draw","depth":3},{"value":"Debug draw","depth":3},{"value":"Adding actors to the scene","depth":3},{"value":"Collision Detection","depth":2},{"value":"Traits","depth":2},{"value":"Actions","depth":2},{"value":"Chaining Actions","depth":3},{"value":"Example: Follow a Path","depth":3},{"value":"Custom Actions","depth":3},{"value":"Future Plans","depth":3}],"frontmatter":{"title":"Actors","path":"/docs/actors"}}},{"node":{"id":"9b0052f1-a56e-5f90-9524-ccf8a9cf276c","headings":[{"value":"Physics hierarchy","depth":3},{"value":"Actor/Body","depth":3},{"value":"Collider","depth":3},{"value":"Shape","depth":3},{"value":"Box and ConvexPolygon Shapes","depth":4},{"value":"Edge Shape","depth":4},{"value":"Circle Shape","depth":4},{"value":"Collision Types","depth":2},{"value":"Prevent","depth":3},{"value":"Passive","depth":3},{"value":"Active","depth":3},{"value":"Fixed","depth":3},{"value":"Collision Type Behavior Matrix","depth":2},{"value":"Enabling Excalibur physics","depth":2},{"value":"Collision Event Lifecycle","depth":2},{"value":"Collision Start \"collisionstart\"","depth":3},{"value":"Collision End \"collisionend\"","depth":3},{"value":"Pre Collision \"precollision\"","depth":3},{"value":"Post Collision \"postcollision\"","depth":3},{"value":"Example Active-Active/Active-Fixed scenario","depth":2},{"value":"Limitations","depth":2}],"frontmatter":{"title":"Physics","path":"/docs/physics"}}},{"node":{"id":"2ea76201-24d3-5511-af3a-89d4b7083465","headings":[{"value":"Creating an asset loader","depth":2},{"value":"Using a web server","depth":2},{"value":"Relative vs. absolute paths","depth":3},{"value":"Setting the base for a page","depth":3},{"value":"Asset types","depth":2},{"value":"Images and textures","depth":3},{"value":"Sounds","depth":3},{"value":"Generic resources","depth":3},{"value":"Custom loadables","depth":2}],"frontmatter":{"title":"Assets","path":"/docs/assets"}}},{"node":{"id":"bae7cb0c-0a0a-5f4e-a70f-1b0a9b66b2f1","headings":[{"value":"Sprites","depth":2},{"value":"Sprite Sheets","depth":2},{"value":"Creating a SpriteSheet","depth":3},{"value":"Creating animations","depth":3},{"value":"Multiple rows","depth":3},{"value":"Animations","depth":2},{"value":"Creating an animation","depth":3},{"value":"Sprite Fonts","depth":2},{"value":"Generating the font sheet","depth":3},{"value":"Creating a sprite font","depth":3},{"value":"Font colors","depth":3},{"value":"Known Issues","depth":3},{"value":"Tile Maps","depth":2},{"value":"Creating a tile map","depth":3},{"value":"Off-screen culling","depth":3},{"value":"Collision checks","depth":3}],"frontmatter":{"title":"Drawings","path":"/docs/drawings"}}},{"node":{"id":"9849c335-9c8b-5b42-b1aa-78fb1de39293","headings":[{"value":"Inspecting engine input","depth":3},{"value":"Keyboard","depth":2},{"value":"Inspecting the keyboard","depth":3},{"value":"Keyboard Events","depth":3},{"value":"Mouse and Touch","depth":2},{"value":"Pointer Events","depth":3},{"value":"Wheel Event","depth":4},{"value":"Last position querying","depth":3},{"value":"Pointer scope (window vs. canvas)","depth":3},{"value":"Responding to input","depth":3},{"value":"Multiple Pointers (Multi-Touch)","depth":3},{"value":"Actor pointer events","depth":3},{"value":"Actor Events","depth":4},{"value":"Gamepads and Controllers","depth":2},{"value":"Gamepad Filtering","depth":3},{"value":"Gamepad Events","depth":3},{"value":"Responding to button input","depth":3},{"value":"Responding to axis input","depth":3}],"frontmatter":{"title":"Input","path":"/docs/input"}}},{"node":{"id":"1cf47911-a954-593d-b5dd-d244721bad6e","headings":[{"value":"What is an Entity-Component-System","depth":2},{"value":"Excalibur ECS Implementation","depth":2},{"value":"Built in Excalibur Components","depth":2},{"value":"[TagComponent]","depth":3},{"value":"[TransformComponent]","depth":3},{"value":"[CanvasDrawComponent]","depth":3},{"value":"Built in Excalibur Systems","depth":2},{"value":"[CanvasDrawingSystem]","depth":3},{"value":"Implementing your own Components & Systems","depth":2}],"frontmatter":{"title":"ECS","path":"/docs/entity-component-system"}}},{"node":{"id":"6c085aa0-8342-5e42-b37b-8fc700a2068e","headings":[{"value":"Screen Elements","depth":2},{"value":"HTML-based UI","depth":2},{"value":"Labels","depth":2},{"value":"Adjusting Fonts","depth":3},{"value":"Web Fonts","depth":3},{"value":"Performance Implications","depth":3}],"frontmatter":{"title":"UI","path":"/docs/ui"}}},{"node":{"id":"cdcda213-9ebe-5d02-9a6b-1dd57c6e22e1","headings":[{"value":"Particle Emission","depth":2},{"value":"Example: Adding an emitter","depth":3},{"value":"Post Processors","depth":2},{"value":"Basic post processors","depth":3},{"value":"Color Blind Corrector Post Processor","depth":3},{"value":"Credits","depth":4},{"value":"Sprite Effects","depth":2}],"frontmatter":{"title":"Effects","path":"/docs/fx"}}},{"node":{"id":"2527d280-d6b8-5b63-9bfa-a983ed14198d","headings":[{"value":"Vectors","depth":2},{"value":"Creating vectors","depth":3},{"value":"Cloning vectors","depth":3},{"value":"Random","depth":2}],"frontmatter":{"title":"Math","path":"/docs/math"}}},{"node":{"id":"ed65a418-625a-5a66-b2b2-55ebccb2f1d0","headings":[{"value":"Constructor Arguments","depth":2},{"value":"Colors","depth":2},{"value":"Creating colors","depth":3},{"value":"Working with colors","depth":2},{"value":"Timers","depth":2},{"value":"Triggers","depth":2},{"value":"Infinite vs. run once","depth":3},{"value":"Creating a trigger","depth":3},{"value":"Logging","depth":2},{"value":"Example: Logging","depth":3},{"value":"Async Promises","depth":2},{"value":"Differences from Native Promises","depth":3},{"value":"Handling errors","depth":3}],"frontmatter":{"title":"Utilities","path":"/docs/utilities"}}}]},"page":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Assets\",\n  \"path\": \"/docs/assets\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Note = makeShortcode(\"Note\");\nvar Example = makeShortcode(\"Example\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Almost every game is more than just boxes and circles. Excalibur provides an asset loading feature that can help you preload things like JSON files, images, and sounds.\"), mdx(\"h2\", {\n    \"id\": \"creating-an-asset-loader\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#creating-an-asset-loader\",\n    \"aria-label\": \"creating an asset loader permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Creating an asset loader\"), mdx(\"p\", null, \"When calling \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html#start\",\n    \"title\": \"View 'Engine.start' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Engine.start\"), \", you can optionally pass an asset \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_loader_.loader.html\",\n    \"title\": \"View 'Loader' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Loader\"), \". This loader will contain a reference to any \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/interfaces/_interfaces_loadable_.loadable.html\",\n    \"title\": \"View 'Loadable' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link tsdoc-link--aliased\",\n    \"target\": \"_blank\"\n  }), \"\\\"loadables\\\"\"), \" you want to load.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"ts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-ts\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" loader \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"ex\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"Loader\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"/* add Loadables here */\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"p\", null, \"\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/interfaces/_interfaces_loadable_.loadable.html\",\n    \"title\": \"View 'Loadable' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link tsdoc-link--aliased\",\n    \"target\": \"_blank\"\n  }), \"Loadables\"), \" are different kinds of assets such as textures, sounds, and generic resources.\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Anytime\"), \" you call \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"game.start(loader)\"), \", the game will pause and the engine will load assets. This means that you \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"do not have to load every asset at once\"), \"! Instead you may want to call \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"game.start(loader)\"), \" initially with core assets and then again when \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/scenes#initialization\"\n  }), \"initializing a Scene\"), \".\")), mdx(\"h2\", {\n    \"id\": \"using-a-web-server\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#using-a-web-server\",\n    \"aria-label\": \"using a web server permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Using a web server\"), mdx(\"p\", null, \"The asset loader \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"only works with a web server\"), \" since it loads assets with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\"\n  }), \"XHR\"), \". That means you cannot use the loader whenrunning an HTML file locally from the file-system (e.g. a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"file://\"), \" protocol URL will not work). The browser throws errors that will prevent you from loading assets.\"), mdx(\"p\", null, \"The fastest way to serve a folder of files is by using the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://npmjs.org/package/serve\"\n  }), \"serve\"), \" NPM package.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# Serve the current directory\"), \"\\nnpx serve \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \".\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# Serve a folder\"), \"\\nnpx serve ./dist\"))), mdx(\"p\", null, \"If you are developing a game using Excalibur with Webpack, Parcel, or another bundler, these typically already come with dev servers for running your game. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/installation#example-project-templates\"\n  }), \"Excalibur project templates\"), \" for templates you can start from that use these tools.\"), mdx(\"h3\", {\n    \"id\": \"relative-vs-absolute-paths\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#relative-vs-absolute-paths\",\n    \"aria-label\": \"relative vs absolute paths permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Relative vs. absolute paths\"), mdx(\"p\", null, \"Given this directory structure:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/root\\n  src/\\n    game.js\\n  assets/\\n    textures/\\n      map.png\\n  index.html\"))), mdx(\"p\", null, \"And you serve from the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"root\"), \" directory like this:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"> cd root\\n> npx serve .\\n\\nNow serving on http://localhost:3000/\"))), mdx(\"p\", null, \"The path to your assets doesn't matter as much because both absolute and relative paths will work:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/assets/textures/map.png => HTTP 200 OK\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"assets/textures/map.png => HTTP 200 OK\"))), mdx(\"p\", null, \"But if you are serving under a sub-directory, like \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"http://localhost:3000/root/index.html\"), \" then the format of your paths matter:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/assets/textures/map.png => HTTP 404 Not Found\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"assets/textures/map.png => HTTP 200 OK\"))), mdx(\"p\", null, \"The first path will fail to load as the absolute asset path would now be \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/root/assets\"), \" and not \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/assets\"), \". Use a relative path to load assets \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"relative\"), \" to the HTML file serving your game.\"), mdx(\"h3\", {\n    \"id\": \"setting-the-base-for-a-page\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#setting-the-base-for-a-page\",\n    \"aria-label\": \"setting the base for a page permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Setting the base for a page\"), mdx(\"p\", null, \"In your HTML file(s), to set the base for any absolute paths like the example above, you can use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base\"\n  }), \"base\"), \" tag:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"html\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-html\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token doctype\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"<!\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token doctype-tag\"\n  }), \"DOCTYPE\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token name\"\n  }), \"html\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \">\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"<\"), \"html\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \">\")), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"<\"), \"head\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \">\")), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"<!-- Set the base for all absolute URLs -->\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"<\"), \"base\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token attr-name\"\n  }), \"href\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token attr-value\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation attr-equals\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\"\"), \"/root\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\"\")), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"/>\")), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"</\"), \"head\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \">\")), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"<\"), \"body\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \">\")), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"<!-- The browser will now properly resolve /root/game.js -->\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"<\"), \"script\"), \" \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token attr-name\"\n  }), \"src\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token attr-value\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation attr-equals\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\"\"), \"/game.js\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\"\")), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \">\")), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token script\"\n  })), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"</\"), \"script\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \">\")), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"</\"), \"body\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \">\")), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token tag\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"</\"), \"html\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \">\"))))), mdx(\"p\", null, \"This can be accessed programmatically using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\"\n  }), \"document.baseUri\"), \" to resolve absolute paths in JavaScript.\"), mdx(\"p\", null, \"This is a good approach to use when hosting your game at a sub-directory, such as publishing to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pages.github.com/\"\n  }), \"GitHub Pages\"), \".\"), mdx(\"h2\", {\n    \"id\": \"asset-types\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#asset-types\",\n    \"aria-label\": \"asset types permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Asset types\"), mdx(\"h3\", {\n    \"id\": \"images-and-textures\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#images-and-textures\",\n    \"aria-label\": \"images and textures permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Images and textures\"), mdx(\"p\", null, \"Textures are the raw images that back \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/drawings#sprites\"\n  }), \"sprites\"), \". Excalibur supports loading most formats that browsers natively support like PNG, BMP, and JPEG. GIFs are even converted to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/drawings#animations\"\n  }), \"Excalibur animations\"), \".\"), mdx(\"p\", null, \"Pass an instance of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_resources_texture_.texture.html\",\n    \"title\": \"View 'Texture' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Texture\"), \" to a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_loader_.loader.html\",\n    \"title\": \"View 'Loader' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Loader\"), \" to preload it. Once a texture\\nis loaded, you can generate a sprite with it:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" txPlayer \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"ex\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Texture\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'/assets/tx/player.png'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" loader \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"ex\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Loader\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"txPlayer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"start\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"loader\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"then\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" player \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"ex\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Actor\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n  player\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"addDrawing\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"txPlayer\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n  game\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"add\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"player\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"h3\", {\n    \"id\": \"sounds\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#sounds\",\n    \"aria-label\": \"sounds permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Sounds\"), mdx(\"p\", null, \"Excalibur supports audio assets like WAV and MP3. Any audio codec or container \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Audio_codecs\"\n  }), \"supported by browsers\"), \" should be able to work with Excalibur. For the widest compatibility, typically we recommend MP3 as it combines quality and compression for the best results.\"), mdx(\"p\", null, \"Pass an instance of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_resources_sound_sound_.sound.html\",\n    \"title\": \"View 'Sound' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Sound\"), \" to a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_loader_.loader.html\",\n    \"title\": \"View 'Loader' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Loader\"), \" to preload it. Once a sound\\nis loaded, you can \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_resources_sound_sound_.sound.html#play\",\n    \"title\": \"View 'Sound.play' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link tsdoc-link--aliased\",\n    \"target\": \"_blank\"\n  }), \"play\"), \" it. You can pass an argument from 0.0 - 1.0\\ninto \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_resources_sound_sound_.sound.html#play\",\n    \"title\": \"View 'Sound.play' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link tsdoc-link--aliased\",\n    \"target\": \"_blank\"\n  }), \"play\"), \" in order to play the sound at that volume.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// define multiple sources (such as mp3/wav/ogg) as a browser fallback\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" sndPlayerDeath \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"ex\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Sound\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'/assets/snd/player-death.mp3'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'/assets/snd/player-death.wav'\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" loader \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"ex\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Loader\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"sndPlayerDeath\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"start\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"loader\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"then\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  sndPlayerDeath\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"play\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"p\", null, \"See the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://excaliburjs.com/examples/?path=/docs/audio\"\n  }), \"examples\"), \" or API documentation for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_resources_sound_sound_.sound.html\",\n    \"title\": \"View 'Sound' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Sound\"), \" for additional features available such as looping, volume setting, and more.\"), mdx(Example, {\n    story: \"audio\",\n    mdxType: \"Example\"\n  }), mdx(\"h3\", {\n    \"id\": \"generic-resources\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#generic-resources\",\n    \"aria-label\": \"generic resources permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Generic resources\"), mdx(\"p\", null, \"\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_resources_resource_.resource.html\",\n    \"title\": \"View 'Resource' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Resource\"), \" is a generic \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/interfaces/_interfaces_loadable_.loadable.html\",\n    \"title\": \"View 'Loadable' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Loadable\"), \" like JSON files, compressed files, or binary files. It passes the raw data interpreted by browser based on the MIME type. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/response\"\n  }), \"XHLHttpRequest.response\"), \" for the different kinds of data to expect when loading. This response is passed to a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"\",\n    \"title\": \"Missing link to 'Resource.processData' docs. We will happily accept a PR to fix this! 🙏\",\n    \"className\": \"tsdoc-link tsdoc-link--missing\",\n    \"target\": \"_blank\"\n  }), \"Resource.processData\"), \" method you need to implement:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" resLevel1 \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"ex\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Resource\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'/assets/levels/1.json'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'application/json'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" loader \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"ex\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Loader\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"resLevel1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// attach a handler to process once loaded\"), \"\\nresLevel1\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function-variable function\"\n  }), \"processData\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"function\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token parameter\"\n  }), \"data\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// process JSON\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" json \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"JSON\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"parse\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"data\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// create a new level (inherits Scene) with the JSON configuration\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" level \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"Level\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"json\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// add a new scene\"), \"\\n  game\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"add\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"level\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" level\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"start\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"loader\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"p\", null, \"For a more complex example of using generic resources, see the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/excaliburjs/excalibur-tiled\"\n  }), \"Excalibur Tiled\"), \" plug-in that loads \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.mapeditor.org/\"\n  }), \"Tiled\"), \" map editor files.\"), mdx(\"h2\", {\n    \"id\": \"custom-loadables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#custom-loadables\",\n    \"aria-label\": \"custom loadables permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Custom loadables\"), mdx(\"p\", null, \"You can implement the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/interfaces/_interfaces_loadable_.loadable.html\",\n    \"title\": \"View 'Loadable' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Loadable\"), \" interface to create your own custom loadables. One example of a custom loadable is the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/excaliburjs/excalibur-tiled\"\n  }), \"excalibur-tiled\"), \" plugin which can load \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.mapeditor.org/\"\n  }), \"Tiled\"), \" map editor files.\"), mdx(\"p\", null, \"This is an advanced feature, as the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#generic-resources\"\n  }), \"Resource\"), \" class already wraps logic around\\nblob/plain data for usages like JSON, configuration, levels, etc through XHR (Ajax).\"), mdx(\"p\", null, \"However, as long as you implement the facets of a loadable, you can create your\\nown.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"path":"/docs/assets","title":"Assets"}}},"pageContext":{}}}