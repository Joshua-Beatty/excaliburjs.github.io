{"componentChunkName":"component---src-templates-docs-page-template-js","path":"/docs/screens","result":{"data":{"releases":{"edges":[{"node":{"publishedAt":"2020-09-08T00:04:48Z","name":"Excalibur v0.24.5 Release","tag":{"name":"v0.24.5"}}},{"node":{"publishedAt":"2020-09-03T00:29:31Z","name":"Excalibur v0.24.4 Release","tag":{"name":"v0.24.4"}}},{"node":{"publishedAt":"2020-05-10T15:49:13Z","name":"Excalibur v0.24.3 Release","tag":{"name":"v0.24.3"}}},{"node":{"publishedAt":"2020-04-28T13:34:37Z","name":"v0.24.2","tag":{"name":"v0.24.2"}}},{"node":{"publishedAt":"2020-04-24T03:13:13Z","name":"v0.24.1","tag":{"name":"v0.24.1"}}}]},"toc":{"edges":[{"node":{"id":"21f691c4-2bda-51e5-bbea-be7a157869ca","headings":[],"frontmatter":{"title":"Welcome","path":"/docs"}}},{"node":{"id":"849d6608-8541-5005-a38d-43992646da18","headings":[{"value":"Getting Excalibur","depth":3},{"value":"npm Package","depth":4},{"value":"Nuget Package","depth":4},{"value":"Yeoman Generator","depth":4},{"value":"Raw Script Files via CDN or Download","depth":4},{"value":"Unstable Builds","depth":4},{"value":"Example Project Templates","depth":4},{"value":"Referencing Excalibur Standalone","depth":4},{"value":"Referencing Excalibur via Triple-Slash Reference","depth":4},{"value":"Module Loaders and Bundlers","depth":4}],"frontmatter":{"title":"Installation Guide","path":"/docs/installation"}}},{"node":{"id":"3399e4ed-038e-575e-8ef4-57e6b69ac8de","headings":[{"value":"Download and Install Excalibur","depth":2},{"value":"Global Namespace vs. Imports","depth":2},{"value":"Build Your Game Script","depth":2},{"value":"Hello Excalibur: Building Breakout!","depth":2}],"frontmatter":{"title":"Getting Started","path":"/docs/getting-started"}}},{"node":{"id":"7827e0de-26c4-5a36-a9f0-a539c836aa1e","headings":[],"frontmatter":{"title":"Features","path":"/docs/features"}}},{"node":{"id":"4cbd5aaa-593c-5851-89a6-c5c529dea346","headings":[{"value":"Creating a game","depth":2},{"value":"The main loop","depth":2},{"value":"Update loop","depth":3},{"value":"Draw loop","depth":3},{"value":"Working with Scenes","depth":2},{"value":"Adding a scene","depth":3},{"value":"Accessing the current scene","depth":3},{"value":"Constructor arguments","depth":2},{"value":"Extending the engine","depth":2},{"value":"Event handling","depth":2},{"value":"Example: Actor events","depth":3},{"value":"Example: Pub/Sub with Excalibur","depth":3},{"value":"Managing game state","depth":2},{"value":"Enabling debug mode","depth":2}],"frontmatter":{"title":"Introduction","path":"/docs/intro"}}},{"node":{"id":"6bf10a20-fc7b-5377-b2b8-52b4e82211e6","headings":[{"value":"Viewport and Resolution","depth":2},{"value":"Coordinate systems","depth":2},{"value":"Screen coordinates","depth":3},{"value":"World coordinates","depth":3},{"value":"Converting between coordinates","depth":3},{"value":"Game resolution","depth":2},{"value":"Native Resolution","depth":3},{"value":"Scaled Resolution","depth":3},{"value":"HiDPI Displays","depth":3},{"value":"Managing display modes","depth":2},{"value":"Fullscreen Display Mode","depth":3},{"value":"Container Display Mode","depth":3},{"value":"Position Display Mode","depth":3},{"value":"Fullscreen API","depth":2}],"frontmatter":{"title":"Screen & Viewport","path":"/docs/screens"}}},{"node":{"id":"b92a2869-f383-561b-a979-c04a0207019c","headings":[{"value":"Adding actors to the scene","depth":2},{"value":"Scene lifecycle","depth":2},{"value":"Adding a scene","depth":3},{"value":"Initialization","depth":3},{"value":"Activation","depth":3},{"value":"Deactivation","depth":3},{"value":"Cameras","depth":2},{"value":"Focus","depth":3},{"value":"Camera strategies","depth":3},{"value":"Custom strategies","depth":4},{"value":"Camera shake","depth":3},{"value":"Camera lerp","depth":3},{"value":"Camera zooming","depth":3},{"value":"Known Issues","depth":2}],"frontmatter":{"title":"Scenes","path":"/docs/scenes"}}},{"node":{"id":"e205c556-7e8b-55a9-ae85-a2ad420310dc","headings":[{"value":"Basic actors","depth":2},{"value":"Custom actors","depth":2},{"value":"Actor lifecycle","depth":2},{"value":"Updating actors","depth":2},{"value":"Initialization","depth":3},{"value":"Pre-update","depth":3},{"value":"Core update","depth":3},{"value":"Post-update","depth":3},{"value":"Drawing actors","depth":2},{"value":"Working with textures & sprites","depth":3},{"value":"Working with animations","depth":3},{"value":"Drawing hooks","depth":2},{"value":"Pre-draw","depth":3},{"value":"Core draw","depth":3},{"value":"Post-draw","depth":3},{"value":"Debug draw","depth":3},{"value":"Adding actors to the scene","depth":3},{"value":"Collision Detection","depth":2},{"value":"Traits","depth":2},{"value":"Actions","depth":2},{"value":"Chaining Actions","depth":3},{"value":"Example: Follow a Path","depth":3},{"value":"Custom Actions","depth":3},{"value":"Future Plans","depth":3}],"frontmatter":{"title":"Actors","path":"/docs/actors"}}},{"node":{"id":"a5155132-ea60-5318-825a-166188fea143","headings":[{"value":"Physics hierarchy","depth":3},{"value":"Actor/Body","depth":3},{"value":"Collider","depth":3},{"value":"Shape","depth":3},{"value":"Box and ConvexPolygon Shapes","depth":4},{"value":"Edge Shape","depth":4},{"value":"Circle Shape","depth":4},{"value":"Collision Types","depth":2},{"value":"Prevent","depth":3},{"value":"Passive","depth":3},{"value":"Active","depth":3},{"value":"Fixed","depth":3},{"value":"Collision Type Behavior Matrix","depth":2},{"value":"Enabling Excalibur physics","depth":2},{"value":"Collision Event Lifecycle","depth":2},{"value":"Collision Start \"collisionstart\"","depth":3},{"value":"Collision End \"collisionend\"","depth":3},{"value":"Pre Collision \"precollision\"","depth":3},{"value":"Post Collision \"postcollision\"","depth":3},{"value":"Example Active-Active/Active-Fixed scenario","depth":2},{"value":"Limitations","depth":2}],"frontmatter":{"title":"Physics","path":"/docs/physics"}}},{"node":{"id":"10fc83bd-73bb-5627-b9d0-c564c3fbd6de","headings":[{"value":"Creating an asset loader","depth":2},{"value":"Using a web server","depth":2},{"value":"Relative vs. absolute paths","depth":3},{"value":"Setting the base for a page","depth":3},{"value":"Asset types","depth":2},{"value":"Images and textures","depth":3},{"value":"Sounds","depth":3},{"value":"Generic resources","depth":3},{"value":"Custom loadables","depth":2}],"frontmatter":{"title":"Assets","path":"/docs/assets"}}},{"node":{"id":"f6834d0b-e9af-55d7-9acc-4e24ea442ec2","headings":[{"value":"Sprites","depth":2},{"value":"Sprite Sheets","depth":2},{"value":"Creating a SpriteSheet","depth":3},{"value":"Creating animations","depth":3},{"value":"Multiple rows","depth":3},{"value":"Animations","depth":2},{"value":"Creating an animation","depth":3},{"value":"Sprite Fonts","depth":2},{"value":"Generating the font sheet","depth":3},{"value":"Creating a sprite font","depth":3},{"value":"Font colors","depth":3},{"value":"Known Issues","depth":3},{"value":"Tile Maps","depth":2},{"value":"Creating a tile map","depth":3},{"value":"Off-screen culling","depth":3},{"value":"Collision checks","depth":3}],"frontmatter":{"title":"Drawings","path":"/docs/drawings"}}},{"node":{"id":"dbfce2f7-8178-5506-bf59-7048f6e1b094","headings":[{"value":"Inspecting engine input","depth":3},{"value":"Keyboard","depth":2},{"value":"Inspecting the keyboard","depth":3},{"value":"Keyboard Events","depth":3},{"value":"Mouse and Touch","depth":2},{"value":"Pointer Events","depth":3},{"value":"Wheel Event","depth":4},{"value":"Last position querying","depth":3},{"value":"Pointer scope (window vs. canvas)","depth":3},{"value":"Responding to input","depth":3},{"value":"Multiple Pointers (Multi-Touch)","depth":3},{"value":"Actor pointer events","depth":3},{"value":"Actor Events","depth":4},{"value":"Gamepads and Controllers","depth":2},{"value":"Gamepad Filtering","depth":3},{"value":"Gamepad Events","depth":3},{"value":"Responding to button input","depth":3},{"value":"Responding to axis input","depth":3}],"frontmatter":{"title":"Input","path":"/docs/input"}}},{"node":{"id":"08516059-87ac-5466-92f9-d6a641a2bb20","headings":[{"value":"Screen Elements","depth":2},{"value":"HTML-based UI","depth":2},{"value":"Labels","depth":2},{"value":"Adjusting Fonts","depth":3},{"value":"Web Fonts","depth":3},{"value":"Performance Implications","depth":3}],"frontmatter":{"title":"UI","path":"/docs/ui"}}},{"node":{"id":"378ecddc-ade6-59cf-ae8e-ff4b5c090a28","headings":[{"value":"Particle Emission","depth":2},{"value":"Example: Adding an emitter","depth":3},{"value":"Post Processors","depth":2},{"value":"Basic post processors","depth":3},{"value":"Color Blind Corrector Post Processor","depth":3},{"value":"Credits","depth":4},{"value":"Sprite Effects","depth":2}],"frontmatter":{"title":"Effects","path":"/docs/fx"}}},{"node":{"id":"754af2c1-bb3c-5d40-8d16-5836bf0dc06c","headings":[{"value":"Vectors","depth":2},{"value":"Creating vectors","depth":3},{"value":"Cloning vectors","depth":3},{"value":"Random","depth":2}],"frontmatter":{"title":"Math","path":"/docs/math"}}},{"node":{"id":"1be8b926-6053-52ea-9a4f-5315645a7de1","headings":[{"value":"Constructor Arguments","depth":2},{"value":"Colors","depth":2},{"value":"Creating colors","depth":3},{"value":"Working with colors","depth":2},{"value":"Timers","depth":2},{"value":"Triggers","depth":2},{"value":"Infinite vs. run once","depth":3},{"value":"Creating a trigger","depth":3},{"value":"Logging","depth":2},{"value":"Example: Logging","depth":3},{"value":"Async Promises","depth":2},{"value":"Differences from Native Promises","depth":3},{"value":"Handling errors","depth":3}],"frontmatter":{"title":"Utilities","path":"/docs/utilities"}}}]},"page":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Screen & Viewport\",\n  \"path\": \"/docs/screens\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Excalibur has a screen abstraction for dealing with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_screen_.screen.html#viewport\",\n    \"title\": \"View 'Screen.viewport' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Screen.viewport\"), \" size, and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_screen_.screen.html#resolution\",\n    \"title\": \"View 'Screen.resolution' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Screen.resolution\"), \". It also handles HiDPI scaling, the browser fullscreen API, and translation of screen coordinates into game world coordinates.\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_screen_.screen.html#viewport\",\n    \"title\": \"View 'Screen.viewport' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Screen.viewport\"), \" represents the size of the window into the game work in CSS pixels on the screen.\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_screen_.screen.html#resolution\",\n    \"title\": \"View 'Screen.resolution' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Screen.resolution\"), \" represents the number of logical pixels stretched across that viewport.\"), mdx(\"p\", null, \"The screen abstraction can be accessed most easily off of a constructed engine.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"typescript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" game \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"new\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token class-name\"\n  }), \"ex\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Engine\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// sets the viewport as it did before\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// width and height are provided for backwards compatibilty\"), \"\\n  width\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"800\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  height\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"600\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// or optionally use the viewport option\"), \"\\n  viewport\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" width\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"800\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" height\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"600\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// sets the resolution\"), \"\\n  resolution\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" ex\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Resolution\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"GameBoy\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" screen \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" game\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\"))), mdx(\"h2\", {\n    \"id\": \"viewport-and-resolution\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#viewport-and-resolution\",\n    \"aria-label\": \"viewport and resolution permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Viewport and Resolution\"), mdx(\"p\", null, \"The best way to change the viewport and resolution is in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html\",\n    \"title\": \"View 'Engine' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Engine\"), \" constructor arguments. If the viewport or resolution is changed after constructor time, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_screen_.screen.html#applyresolutionandviewport\",\n    \"title\": \"View 'Screen.applyResolutionAndViewport' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Screen.applyResolutionAndViewport\"), \" must be called to have the changes take effect.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"typescript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// get or set the viewport\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" viewport \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" game\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"viewport\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"viewport \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" width\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"400\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" height\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"300\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// get or set the resolution\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"const\"), \" resolution \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" game\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"resolution\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"resolution \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" width\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"100\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" height\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"100\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Apply changes to viewport and resolution to the canvas and graphics context\"), \"\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"applyResolutionAndViewport\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"p\", null, \"Sometimes you might want to switch between 2 different resolutions and viewports, perhaps for different scenes, or for some in game animation. This can be done with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_screen_.screen.html#pushresolutionandviewport\",\n    \"title\": \"View 'Screen.pushResolutionAndViewport' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Screen.pushResolutionAndViewport\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_screen_.screen.html#popresolutionandviewport\",\n    \"title\": \"View 'Screen.popResolutionAndViewport' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Screen.popResolutionAndViewport\"), \".\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"typescript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Save the current resolution and viewport\"), \"\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"pushResolutionAndViewport\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Change and apply\"), \"\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"resolution \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" ex\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"Resolution\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token constant\"\n  }), \"NES\"), \"\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"applyResolutionAndViewport\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Show some animation or do something at NES resolution\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// Restore the old resolution and viewport, then apply\"), \"\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"popResolutionAndViewport\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\ngame\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"applyResolutionAndViewport\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))), mdx(\"h2\", {\n    \"id\": \"coordinate-systems\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#coordinate-systems\",\n    \"aria-label\": \"coordinate systems permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Coordinate systems\"), mdx(\"p\", null, \"In Excalibur, due to HTML canvas native and scaled resolution, there are essentially \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"two\"), \" kinds of coordinates: a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"screen\"), \" coordinate and a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"world\"), \" coordinate.\"), mdx(\"h3\", {\n    \"id\": \"screen-coordinates\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#screen-coordinates\",\n    \"aria-label\": \"screen coordinates permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Screen coordinates\"), mdx(\"p\", null, \"A screen coordinate is a point on a user's physical screen. \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"(0, 0)\"), \" in screen coordinates is the top-left of the canvas. Excalibur translates mouse event positions into screen coordinates for you. Screen coordinates ignore the game camera, think of it like where the user is physically pointing on top of your game.\"), mdx(\"h3\", {\n    \"id\": \"world-coordinates\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#world-coordinates\",\n    \"aria-label\": \"world coordinates permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"World coordinates\"), mdx(\"p\", null, \"A world coordinate is a point \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"in the game world\"), \" relative to a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/scenes#camera\"\n  }), \"scene's camera\"), \". The world space is the default place where actors operate. \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"(0, 0)\"), \" in the game world may be \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"displayed\"), \" at the center of your game because that may be the camera's focal point.\"), mdx(\"h3\", {\n    \"id\": \"converting-between-coordinates\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#converting-between-coordinates\",\n    \"aria-label\": \"converting between coordinates permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Converting between coordinates\"), mdx(\"p\", null, \"Usually, your game logic should only deal in terms of world coordinates because this is the coordinate system you're positioning actors in or drawing in. Sometimes though, you need to convert between systems when interfacing with input.\"), mdx(\"p\", null, \"Excalibur provides two methods to convert between systems, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html#screentoworldcoordinates\",\n    \"title\": \"View 'Engine.screenToWorldCoordinates' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Engine.screenToWorldCoordinates\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html#worldtoscreencoordinates\",\n    \"title\": \"View 'Engine.worldToScreenCoordinates' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Engine.worldToScreenCoordinates\"), \". Use these methods to convert between coordinate systems as they take into account all the information Excalibur collects to appropriately do the math for you including scaling, device pixel ratio, and more.\"), mdx(\"h2\", {\n    \"id\": \"game-resolution\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#game-resolution\",\n    \"aria-label\": \"game resolution permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Game resolution\"), mdx(\"p\", null, \"An HTML canvas element has a \\\"native\\\" resolution which is specified using the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"width\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"height\"), \" HTML attributes. In Excalibur, these can be set using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html#canvaswidth\",\n    \"title\": \"View 'Engine.canvasWidth' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link tsdoc-link--aliased\",\n    \"target\": \"_blank\"\n  }), \"canvasWidth\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html#canvasheight\",\n    \"title\": \"View 'Engine.canvasHeight' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link tsdoc-link--aliased\",\n    \"target\": \"_blank\"\n  }), \"canvasHeight\"), \" respectively.\"), mdx(\"h3\", {\n    \"id\": \"native-resolution\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#native-resolution\",\n    \"aria-label\": \"native resolution permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Native Resolution\"), mdx(\"p\", null, \"If you don't explicitly set \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"canvasWidth\"), \" or \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"canvasHeight\"), \" Excalibur will manage the values for you, meaning that the \\\"native\\\" resolution will be the physical screen width/height so there is no \\\"scaling\\\" happening. This means your game logic must be responsive if the resolution of the game changes and you cannot depend on a \\\"fixed\\\" width/height coordinate system. Games which can be played on mobile devices \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"and\"), \" desktop will work, since your game logic can detect what screen size the game is being played on and respond accordingly.\"), mdx(\"h3\", {\n    \"id\": \"scaled-resolution\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#scaled-resolution\",\n    \"aria-label\": \"scaled resolution permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Scaled Resolution\"), mdx(\"p\", null, \"Alternatively, if a native resolution is set and then CSS is used to change the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"styled\"), \" \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"width\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"height\"), \", this makes your game \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"scale\"), \" to whatever the CSS dimensions are. You would want to explicitly set a native resolution if your game depends on having a specific width/height of the \\\"draw area\\\". For example, you may want to design a game that depends on a fixed size of 1280x720 but you want to allow the user to view it at higher resolutions on their browser, so you may scale the canvas to a 16:9 ratio. Your game logic and positioning logic will still work since the game world is still 720px wide even though it may be displaying at 1080px wide on a high-res screen.\"), mdx(\"h3\", {\n    \"id\": \"hidpi-displays\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#hidpi-displays\",\n    \"aria-label\": \"hidpi displays permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"HiDPI Displays\"), mdx(\"p\", null, \"HiDPI displays scale device pixels. For example, on a normal monitor, a 1280x720 game canvas will return \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"1280\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"720\"), \" for the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"width\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"height\"), \" respectively. However, on a 2X HiDPI display \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"what's actually drawn\"), \" is multiplied by a device pixel ratio of \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"2\"), \" so, \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"2560\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"1440\"), \". Any time you need to get this \\\"actual\\\" width and height of what's being drawn to the canvas, the engine exposes \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html#drawwidth\",\n    \"title\": \"View 'Engine.drawWidth' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Engine.drawWidth\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html#drawheight\",\n    \"title\": \"View 'Engine.drawHeight' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Engine.drawHeight\"), \" that takes into account the device pixel ratio. In this HiDPI scenario, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html#canvaswidth\",\n    \"title\": \"View 'Engine.canvasWidth' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Engine.canvasWidth\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/classes/_engine_.engine.html#canvasheight\",\n    \"title\": \"View 'Engine.canvasHeight' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"Engine.canvasHeight\"), \" would still return the native \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"1280x720\"), \" resolution.\"), mdx(\"h2\", {\n    \"id\": \"managing-display-modes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#managing-display-modes\",\n    \"aria-label\": \"managing display modes permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Managing display modes\"), mdx(\"p\", null, \"Excalibur supports multiple display modes for a game. Pass in a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/interfaces/_engine_.engineoptions.html#displaymode\",\n    \"title\": \"View 'EngineOptions.displayMode' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link tsdoc-link--aliased\",\n    \"target\": \"_blank\"\n  }), \"displayMode\"), \"\\noption when creating a game to customize the viewport.\"), mdx(\"h3\", {\n    \"id\": \"fullscreen-display-mode\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#fullscreen-display-mode\",\n    \"aria-label\": \"fullscreen display mode permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Fullscreen Display Mode\"), mdx(\"p\", null, \"\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/enums/_screen_.displaymode.html#fullscreen\",\n    \"title\": \"View 'DisplayMode.FullScreen' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"DisplayMode.FullScreen\"), \" will style the canvas with CSS to take up the entire window viewport. If \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"canvasWidth\"), \" and \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"canvasHeight\"), \" are not set explicitly, the native resolution will be the same as the viewport size.\"), mdx(\"h3\", {\n    \"id\": \"container-display-mode\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#container-display-mode\",\n    \"aria-label\": \"container display mode permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Container Display Mode\"), mdx(\"p\", null, \"If you use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/enums/_screen_.displaymode.html#container\",\n    \"title\": \"View 'DisplayMode.Container' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"DisplayMode.Container\"), \", the canvas will automatically resize to fit inside of\\nit's parent DOM element. This allows you maximum control over the game viewport, e.g. in case\\nyou want to provide HTML UI on top or as part of your game.\"), mdx(\"h3\", {\n    \"id\": \"position-display-mode\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#position-display-mode\",\n    \"aria-label\": \"position display mode permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Position Display Mode\"), mdx(\"p\", null, \"You can use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/enums/_screen_.displaymode.html#position\",\n    \"title\": \"View 'DisplayMode.Position' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"DisplayMode.Position\"), \" to specify where the game window will be displayed on screen. If\\nthis DisplayMode is selected, then a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/interfaces/_engine_.engineoptions.html#position\",\n    \"title\": \"View 'EngineOptions.position' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link tsdoc-link--aliased\",\n    \"target\": \"_blank\"\n  }), \"position\"), \" option \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"must\"), \" be provided to the Engine constructor.\\nThe \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/interfaces/_engine_.engineoptions.html#position\",\n    \"title\": \"View 'EngineOptions.position' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link tsdoc-link--aliased\",\n    \"target\": \"_blank\"\n  }), \"position\"), \" option can be a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"string\"), \" or an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/interfaces/_screen_.absoluteposition.html\",\n    \"title\": \"View 'AbsolutePosition' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"AbsolutePosition\"), \".\"), mdx(\"p\", null, \"The first word in a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"string\"), \" \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"must\"), \"\\nbe the desired vertical alignment of the window. The second (optional) word is the desired horizontal\\nalignment.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Valid \", mdx(\"code\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"string\"), \" examples\"), \": \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"top left\\\"\"), \", \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"top\\\"\"), \", \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"bottom\\\"\"), \", \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"middle\\\"\"), \", \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"middle center\\\"\"), \", \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"\\\"bottom right\\\"\"))), mdx(\"p\", null, \"For an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/api/edge/interfaces/_screen_.absoluteposition.html\",\n    \"title\": \"View 'AbsolutePosition' in Excalibur.js Edge API docs\",\n    \"className\": \"tsdoc-link\",\n    \"target\": \"_blank\"\n  }), \"AbsolutePosition\"), \", the value for each property is interpreted similar to CSS, where a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"number\"), \" value is in pixels and a string is whatever valid CSS unit you want to pass.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Valid \", mdx(\"code\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"AbsolutePosition\"), \" examples\"), \": \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"{top: 5, right: \\\"10%\\\"}\"), \", \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"{bottom: \\\"49em\\\", left: \\\"10px\\\"}\"), \", \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"{left: 10, bottom: 40}\"))), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"<canvas>\"), \" element will be positioned using CSS with the values you pass in.\"), mdx(\"h2\", {\n    \"id\": \"fullscreen-api\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#fullscreen-api\",\n    \"aria-label\": \"fullscreen api permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Fullscreen API\"), mdx(\"p\", null, \"The screen abstraction now supports the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\"\n  }), \"browser fullscreen api\"), \". This will cause the game to be displayed fullscreen until the user exits (usually with the escape key or by gesturing to the exit button at the top of the browser window).\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"typescript\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-typescript\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"await\"), \" game\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"goFullScreen\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"await\"), \" game\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"screen\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"exitFullScreen\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"path":"/docs/screens","title":"Screen & Viewport"}}},"pageContext":{}}}